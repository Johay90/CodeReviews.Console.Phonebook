// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Phone_Book.Migrations
{
    [DbContext(typeof(PhoneBookContext))]
    [Migration("20240620145745_InitialSeedData")]
    partial class InitialSeedData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Contacts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Adam Smith"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Beth Johnson"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Chris Brown"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Dave Wilson"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Emma Taylor"
                        });
                });

            modelBuilder.Entity("Email", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("Emails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactId = 1,
                            EmailAddress = "adam.smith@email.com"
                        },
                        new
                        {
                            Id = 2,
                            ContactId = 2,
                            EmailAddress = "beth.johnson@email.com"
                        },
                        new
                        {
                            Id = 3,
                            ContactId = 3,
                            EmailAddress = "chris.brown@email.com"
                        },
                        new
                        {
                            Id = 4,
                            ContactId = 4,
                            EmailAddress = "dave.wilson@email.com"
                        },
                        new
                        {
                            Id = 5,
                            ContactId = 5,
                            EmailAddress = "emma.taylor@email.com"
                        });
                });

            modelBuilder.Entity("PhoneNumber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ContactId")
                        .HasColumnType("int");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ContactId");

                    b.ToTable("PhoneNumbers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContactId = 1,
                            Number = "07956049455"
                        },
                        new
                        {
                            Id = 2,
                            ContactId = 2,
                            Number = "07123456789"
                        },
                        new
                        {
                            Id = 3,
                            ContactId = 3,
                            Number = "07234567890"
                        },
                        new
                        {
                            Id = 4,
                            ContactId = 4,
                            Number = "07345678901"
                        },
                        new
                        {
                            Id = 5,
                            ContactId = 5,
                            Number = "07456789012"
                        });
                });

            modelBuilder.Entity("Email", b =>
                {
                    b.HasOne("Contact", "Contact")
                        .WithMany("EmailAddresses")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("PhoneNumber", b =>
                {
                    b.HasOne("Contact", "Contact")
                        .WithMany("PhoneNumbers")
                        .HasForeignKey("ContactId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contact");
                });

            modelBuilder.Entity("Contact", b =>
                {
                    b.Navigation("EmailAddresses");

                    b.Navigation("PhoneNumbers");
                });
#pragma warning restore 612, 618
        }
    }
}
